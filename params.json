{
  "name": "GitHub-tutorial",
  "tagline": "Let's Git Started On The GitHub Tutorial!",
  "body": "# GitHub Tutorial\r\n\r\n_by Marilyn Morales_\r\n\r\n---\r\n\r\nMany developers around the world use github because Github is essential and really helpful. It might seem difficult at first but once you get an understanding of how github works you'll love it. But what exactly is Github?\r\n\r\n## Git vs. GitHub\r\n   **What is Git?**  \r\n  *  _Git is the version control._\r\n  *  _Git runs in the command line._\r\n  *  _takes a \"snapshot\", or a picture of your code._\r\n   \r\n   **What is Github?**\r\n  *  _Github stores all the code in the cloud_\r\n  *  _Github is aware of all the changes you make in your code._\r\n  *  _Many people can work on the same files at once!_\r\n  *  _[GitHub's Website](github.com)_\r\n  \r\n  **What is the difference between Git & GitHub?**  \r\n* _Git does not require of Github but Github requires of Git_\r\n\r\n---\r\n## Initial Setup\r\n##### Creating a GitHub account  \r\nSo how exactly do you create a GitHub account?  \r\n\r\n    Here are the basic steps on how to create a GitHub account!:  \r\n1.Start by opening Google Chrome, and opening a incognito page(optional)  \r\n![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%206.40.14%20PM.png)  \r\n2.Go to Github.com  \r\n![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%207.20.29%20PM.png)  \r\n3.Click on sign up  \r\n4.Create a username and password for your account  \r\n5.CONGRATULATIONS! Your Github account is good to go!  \r\n    \r\n##### Creating an SSH Key on Github  \r\n\r\n    Here are the simple steps on how to create a SSH Key:  \r\n   1. Open Google Chrome\r\n   2. Go to the [website](Github.com)\r\n   3. sign in and click on your profile icon at the top right  \r\n   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%207.19.04%20PM.png) ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.19.30%20PM.png)\r\n   4. click on settings  \r\n   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.19.40%20PM.png)\r\n   5. On the left sidebar click on the SSH and GPG keys  \r\n   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.45.18%20PM.png)\r\n   6. Click on the new SSH key\r\n   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.20.24%20PM.png)\r\n   7. Give it an appropriate title  \r\n   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.20.48%20PM.png)\r\n   8. Now switch to cloud 9 and go to the right and click on on the gear icon to press SSH Keys   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.20.52%20PM.png)  \r\n   9. Copy and paste the SSH keys  \r\n   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.21.15%20PM.png)\r\n   10. Press add SSH Key  \r\n   ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%209.21.02%20PM.png)  \r\n   11. Open your workspace on Github and your good to go!\r\n\r\n---\r\n## Repository Setup\r\n\r\n**What is a REPOSITORY?**\r\n###### _A repo is basically a workspace where you have access to all the git commands you do, it stores all the files._\r\n#### Making Your First Repo  \r\n1. First type in ~cd/workspace  \r\n2. Create a folder called \"first repo\" or whatever you want to call it mkdir first-repo  \r\n3. Now go on to the folder by typing cd first-repo  \r\n4. Lastly Initialize it  \r\n**What is git init?**\r\n  Git init turns the folder that you created into a repository and when it initialzes it begins to save your files by taking \"snapshots\" of it. \r\n5. Now create a new file by typing touch readme.md  \r\n6. You can open the file and type in something  \r\n7. type in git add .  \r\n**what is git add .?**\r\nGit add, adds your file onto your repository  \r\n8. Save your edits and give yourself a message of your edit by typing git commit -m \"\"  \r\n** What is git commit?**\r\nGit commit saves your file's changes. First you need to add something to the staging area and then you commit to save the final changes. \r\n\r\n#### Making your remote repo\r\n1.Go on to Github.com  \r\n2. on the top right click on the icon  \r\n    ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%2010.28.39%20PM.png)\r\n3. Click on new repository  \r\n4. Name your repository (ALWAYS NAME YOUR REPOSITORY THE SAME NAME YOU PUT FOR YOUR FOLDER)  \r\n5. Create Repository  \r\n6. Click on the SSH  \r\n7. Copy each link one at a time an paste in onto your code   \r\n    ![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%2010.32.47%20PM.png)\r\n---\r\n## Workflow & commands\r\n\r\n**Here are some Git commands**  \r\n    1. `Git status` - it is used to keep on track of all the changes you have made. We can use Git Status to see our edits\r\n    If will either turn red or green.  \r\n    2. `Git commit` - It is used to take a snapshot of your file. You can also use, \r\n    `Git commit -m \"\"` which means that it will save your files and at the same time you could give yourself a message of what were you editing. The messages come in handy.So like when you want to look back at your work you know exactly why you edited parts   \r\n    3. 'Git add' You could use git add when you want to save your file onto your repository but you have to commit it so that it could be in the version control.   \r\n    4. `Git push` Pushes your edit and all the shanges you made on your repository onto the cloud. \r\n    \r\n## Error Handling\r\n   What to do if you have errors? I mean everyone makes mistakes  \r\n   Here are some errors that you might face  \r\n   Error #1. \r\n![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%2010.59.41%20PM.png)  \r\nWhat is the problem?  \r\n_The person did not add the file to the staging area and so that's why it is not green._ \r\n   Solution to #1  \r\n![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%2011.04.23%20PM.png)\r\nWhat is the solution?  \r\n_By typing Git add you now have added the file to the staging area therefore it is now green._\r\n\r\n   Error #2  \r\n![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%2011.04.23%20PM.png)\r\nWhat is the problem?  \r\n_The problem was that the person who wrote the code forgot to write a message when commiting so the computer did not understand what it was saying.\r\n   Solution #2  \r\nWhat is the solution?  \r\nBy pressing command q, it means that you quit the changes and then it would ask you if you want to save the files and you could say no by typing \"N\"\r\n\r\n## Collaboration\r\n\r\nHow to fork and clone someone else's repository\r\n    cloning a repository  \r\n    _when you clone a repository you do not have access to push their remote but you do have access to a local repository_  \r\n   Forking  a repository\r\n   _when you fork someone elses repository you have a remote copy of their repository and you have access to push their remote_\r\n   Let's get started:  \r\n    1. Go to Github.com  \r\n    2. Go to the person you want to clone and fork their repository  \r\n    3. click on the fork icon  \r\n![](https://preview.c9users.io/marilynm7682/github-learning/github-tutorial/Screen%20Shot%202016-10-24%20at%2011.27.01%20PM.png)  \r\n    4. Now copy the SSH key and you're set you could now edit and push your work onto Github.  \r\n\r\nPull requests  \r\n   What is Pull request?  \r\n   A pull request is when you fork someone elses repository and you want that person to see your changes; So you make a pull request in order for the person to recognize the changes you made.They can either deny or accept it. \r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}